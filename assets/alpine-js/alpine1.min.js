function cartHandler() {
  return {
    activePage: 'dashboard',

activePage: 'dashboard',

// Login
loginEmail: '',
loginPassword: '',
isPasswordVisible: false,

login() {
  const storedEmail = localStorage.getItem('adminEmail') || 'rizaldoricky@gmail.com';
  const storedPassword = localStorage.getItem('adminPassword') || 'jayapura11';

  if (this.loginEmail === storedEmail && this.loginPassword === storedPassword) {
    Swal.fire({
      title: 'Login Berhasil!',
      text: 'Selamat datang di dashboard.',
      icon: 'success',
      confirmButtonText: 'Lanjut'
    }).then((result) => {
      if (result.isConfirmed) {
        localStorage.setItem('isLoggedIn', 'true'); // ✅ Simpan status login
        window.location.href = 'dashboard.html';
      }
    });
  } else {
    Swal.fire({
      title: 'Login Gagal!',
      text: 'Email atau password salah.',
      icon: 'error',
      confirmButtonText: 'Coba Lagi'
    });
  }
},


    togglePasswordVisibility() {
      this.isPasswordVisible = !this.isPasswordVisible;
    },
    setAdminCredentials(email, password) {
      localStorage.setItem('adminEmail', email);
      localStorage.setItem('adminPassword', password);
    },

    // Data Produk ...
    products: [ 
      { name: 'Noken Kecil', price: 150000, diskon: 'Rp 300000', image: 'assets/img/rajutan-kulit-kayu/10.png', descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false },
      { name: 'Noken Kecil 2', price: 180000, diskon: 'Rp 350000', image: 'assets/img/rajutan-kulit-kayu/16.png' , descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false },
      { name: 'Noken Anyaman', price: 180000, diskon: 'Rp 350000', image: 'assets/img/rajutan-kulit-kayu/11.png' , descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false },
      { name: 'Noken Besar', price: 250000, diskon: 'Rp 400000', image: 'assets/img/rajutan-kulit-kayu/1.png' , descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false },
      { name: 'Noken Rajutan', price: 300000, diskon: 'Rp 450000', image: 'assets/img/rajutan-kulit-kayu/4.png' , descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false },
      { name: 'Noken Rotan 1', price: 350000, diskon: 'Rp 500000', image: 'assets/img/rajutan-kulit-kayu/12.png', descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false },
      { name: 'Noken Rotan 2', price: 400000, diskon: 'Rp 550000', image: 'assets/img/rajutan-kulit-kayu/13.png' , descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false },
      { name: 'Noken Rotan 3', price: 400000, diskon: 'Rp 550000', image: 'assets/img/rajutan-kulit-kayu/14.png' , descriptions:'Rajutan Kulit Kayu', category:'filter-staters', liked: false, inCart: false }
    ],
    products2: [
      { name: 'Noken Kecil', price: 150000, diskon: 'Rp 300000', image: 'assets/img/rajutan-benang/3.png', descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Besar 1', price: 250000, diskon: 'Rp 400000', image: 'assets/img/rajutan-benang/5.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Besar 2', price: 200000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/6.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Anyaman', price: 180000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/7.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Motiv PNG 1', price: 150000, diskon: 'Rp 300000', image: 'assets/img/rajutan-benang/8.png', descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Motiv PNG 2', price: 250000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/9.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Rajutan', price: 200000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/17.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Rajutan', price: 200000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/18.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Rajutan', price: 200000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/19.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Rajutan', price: 200000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/22.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false },
      { name: 'Noken Anyaman', price: 180000, diskon: 'Rp 350000', image: 'assets/img/rajutan-benang/23.png' , descriptions:'Rajutan Benang', category:'filter-salads', liked: false, inCart: false }
    ],
    products3: [ 
      { name: 'Anting anting Bia', price: 150000, image: 'assets/img/aksesoris/2.png', descriptions:'Aksesoris', category:'filter-specialty', liked: false, inCart: false },
      { name: 'Koteka Coklat', price: 250000, image: 'assets/img/aksesoris/20.png' , descriptions:'Aksesoris', category:'filter-specialty', liked: false, inCart: false },
      { name: 'Koteka Hitam', price: 200000, image: 'assets/img/aksesoris/21.png' , descriptions:'Aksesoris', category:'filter-specialty', liked: false, inCart: false }

     ],


    // Cart & Checkout ...
    cart: [],
    showSidebar: false,
    showForm: false,
    customerData: { name: '', address: '', email: '', phone: '' },

    get totalItems() {
      return this.cart.reduce((sum, item) => sum + item.qty, 0);
    },
    get totalPrice() {
      return this.cart.reduce((sum, item) => sum + (item.price * item.qty), 0);
    },
    searchQuery: '',

    get filteredProducts() {
      const query = this.searchQuery.toLowerCase();
      const all = [...this.products, ...this.products2, ...this.products3];
      return all.filter(p =>
        p.name.toLowerCase().includes(query) ||
        p.descriptions.toLowerCase().includes(query) ||
        p.category.toLowerCase().includes(query)
      );
    },
    addToCart(product) {
      const found = this.cart.find(p => p.name === product.name);
      found ? found.qty++ : this.cart.push({ ...product, qty: 1 });
      this.saveToLocalStorage(); // simpan setelah menambah
    },
    increaseQty(product) { product.qty++; this.saveToLocalStorage(); },
    decreaseQty(product) {
      if (product.qty > 1) product.qty--;
      else this.cart = this.cart.filter(item => item.name !== product.name);
      this.saveToLocalStorage();
    },

    checkout() {
      if (this.cart.length === 0) return Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "Keranjang Belanja Kosong",
      });
      this.showForm = true;
    },

    submitOrder() {
      if (!this.customerData.name || !this.customerData.address || !this.customerData.email) {
      Swal.fire({
        icon: "info",
        title: "Oops...",
        text: "Harap Lengkapi Data Diri Terlebih Dulu!",
      });
        return;
      }
      let message = "*Halo! Saya ingin order produk berikut:*\n\n";
      this.cart.forEach(item => {
        message += `• ${item.name} x ${item.qty} = Rp ${(item.price * item.qty).toLocaleString()}\n`;
      });
      message += `\n*Total Barang:* ${this.totalItems}`;
      message += `\n*Total Harga:* Rp ${this.totalPrice.toLocaleString()}`;
      message += `\n\n*Data Diri:*\nNama: ${this.customerData.name}\nAlamat: ${this.customerData.address}\nEmail: ${this.customerData.email}\nPhone: ${this.customerData.phone}`;

     let transactions = JSON.parse(localStorage.getItem("transactions")) || [];

// Cek dan pastikan totalPrice adalah angka yang valid
    console.log("Total Price Sebelum Parse:", this.totalPrice);
    this.totalPrice = parseFloat(this.totalPrice);
    if (isNaN(this.totalPrice)) {
      console.warn("Total Price tidak valid, mengatur ke 0");
      this.totalPrice = 0;
    }

// Cek dan pastikan totalItems adalah angka yang valid
    console.log("Total Items Sebelum Parse:", this.totalItems);
    this.totalItems = parseInt(this.totalItems, 10);
    if (isNaN(this.totalItems)) {
      console.warn("Total Items tidak valid, mengatur ke 0");
      this.totalItems = 0;
    }

// Pastikan cart berisi array yang valid dan tidak kosong
    if (!Array.isArray(this.cart) || this.cart.length === 0) {
      console.warn("Cart tidak valid atau kosong, mengatur ke array kosong");
      this.cart = [];
    }

console.log("Customer Data:", this.customerData);
console.log("Cart:", this.cart);

// Tambahkan transaksi
transactions.push({
  id: Date.now(),
  customer: { ...this.customerData }, // pastikan customerData valid
  items: [...this.cart],
  totalItems: this.totalItems,
  totalPrice: this.totalPrice,
  date: new Date().toLocaleString(),
});

  // Simpan kembali transaksi ke localStorage
  localStorage.setItem("transactions", JSON.stringify(transactions));
  let allTransactions = JSON.parse(localStorage.getItem("transactions")) || [];
  let totalPendapatan = allTransactions.reduce((total, transaction) => {
    if (!isNaN(transaction.totalPrice)) {
      total += transaction.totalPrice;
    }
    return total;
  }, 0);


  console.log("Total Pendapatan:", totalPendapatan);
  Swal.fire({
    title: 'Checkout Berhasil!',
    text: 'Total: Rp ' + this.totalPrice.toLocaleString(),
    icon: 'success',
    confirmButtonText: 'Oke'
  }).then(() => {
    const waUrl = `https://wa.me/6281215376865?text=${encodeURIComponent(message)}`;
    window.location.href = waUrl;
  });


      this.cart = [];
      this.showSidebar = false;
      this.showForm = false;
      this.saveToLocalStorage();
      window.open(waUrl, "_blank");
    },

    toggleSidebar() { this.showSidebar = !this.showSidebar; },
    closeSidebar() { this.showSidebar = false; },


    // CRUD Produk
    newProduct: { name: '', price: '', descriptions: '', image: '', category: '' },
    editIndex: null,
    editSource: '',

    get allProducts() {
      const combine = (arr, sourceName) => arr.map((p, i) => ({ ...p, sourceArray: sourceName, realIndex: i }));
      return [...combine(this.products, 'products'), ...combine(this.products2, 'products2'), ...combine(this.products3, 'products3')];
    },

    createProduct() {
      // Validasi
      if (!this.newProduct.name || !this.newProduct.price || !this.newProduct.image || !this.newProduct.category) {
        alert('Mohon lengkapi semua data produk.');
        return;
      }
      const target = this.getTargetArray(this.newProduct.category);
      target.push({ ...this.newProduct, liked: false, inCart: false });
      this.saveToLocalStorage();
      this.resetForm();
    },
    editProduct(source, index) {
      this.editIndex = index;
      this.editSource = source;
      this.newProduct = { ...this[source][index] };
    },
    updateProduct() {
      if (this.editIndex !== null && this.editSource) {
        this[this.editSource][this.editIndex] = { ...this.newProduct };
        this.saveToLocalStorage();
        this.cancelEdit();
      }
    },
    deleteProduct(source, index) {
      this[source].splice(index, 1);
      this.saveToLocalStorage();
    },
    cancelEdit() {
      this.editIndex = null;
      this.editSource = '';
      this.resetForm();
    },
    resetForm() {
      this.newProduct = { name: '', price: '', descriptions: '', image: '', category: '' };
    },
    getTargetArray(category) {
      if (category === 'filter-staters') return this.products;
      if (category === 'filter-salads') return this.products2;
      if (category === 'filter-specialty') return this.products3;
      return this.products;
    },
    handleFileChange(e) {
      const file = e.target.files[0];
      const reader = new FileReader();
      reader.onload = () => this.newProduct.image = reader.result;
      if (file) reader.readAsDataURL(file);
    },

    // Users (Pengguna Admin)
    users: [],
    newUser: { name: '', email: '', password: '' },
    editUserIndex: null,

    createUser() {
      if (!this.newUser.name || !this.newUser.email || !this.newUser.password) {
        alert("Mohon lengkapi semua data pengguna.");
        return;
      }
      this.users.push({ ...this.newUser });
      this.saveToLocalStorage();
      this.resetUserForm();
    },
    editUser(index) {
      this.editUserIndex = index;
      this.newUser = { ...this.users[index] };
    },
    updateUser() {
      if (this.editUserIndex !== null) {
        this.users[this.editUserIndex] = { ...this.newUser };
        this.saveToLocalStorage();
        this.cancelUserEdit();
      }
    },
    deleteUser(index) {
      if (confirm("Yakin ingin menghapus pengguna ini?")) {
        this.users.splice(index, 1);
        this.saveToLocalStorage();
      }
    },
    cancelUserEdit() {
      this.editUserIndex = null;
      this.resetUserForm();
    },
    resetUserForm() {
      this.newUser = { name: '', email: '', password: '' };
    },

    // Penyimpanan Data
    saveToLocalStorage() {
      localStorage.setItem('products', JSON.stringify(this.products));
      localStorage.setItem('products2', JSON.stringify(this.products2));
      localStorage.setItem('products3', JSON.stringify(this.products3));
      localStorage.setItem('cart', JSON.stringify(this.cart));
      localStorage.setItem('users', JSON.stringify(this.users));
    },

    loadFromLocalStorage() {
      const keys = ['products', 'products2', 'products3', 'cart', 'users'];
      keys.forEach(key => {
        const data = localStorage.getItem(key);
        if (data) this[key] = JSON.parse(data);
      });
    },


    // Logout/Login
    logout() {
      Swal.fire({
        icon: 'success',
        title: 'Logout berhasil',
        text: 'Anda akan dialihkan ke halaman login.',
        confirmButtonText: 'OK'
      }).then(() => {
        window.location.href = 'login.html';
      });
    },


    // Transaksi
    get transactions() {
      const data = JSON.parse(localStorage.getItem("transactions")) || [];
      return data.sort((a, b) => b.id - a.id);
    },
    deleteTransaction(id) {
      const updated = this.transactions.filter(t => t.id !== id);
      localStorage.setItem("transactions", JSON.stringify(updated));
    },

    deleteTransaction(id) {
    Swal.fire({
        title: 'Hapus Transaksi?',
        text: "Data tidak dapat dikembalikan!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Ya, hapus'
    }).then((result) => {
        if (result.isConfirmed) {
            let transactions = JSON.parse(localStorage.getItem("transactions")) || [];
            transactions = transactions.filter(t => t.id !== id);
            localStorage.setItem("transactions", JSON.stringify(transactions));
            this.loadTransactions();

            Swal.fire('Dihapus!', 'Transaksi berhasil dihapus.', 'success');
        }
    });
},

confirmDeleteAllTransactions() {
    if (this.transactions.length === 0) {
        Swal.fire('Tidak Ada Data', 'Tidak ada transaksi untuk dihapus.', 'info');
        return;
    }

    Swal.fire({
        title: 'Hapus Semua Transaksi?',
        text: "Semua data akan hilang!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Ya, hapus semua'
    }).then((result) => {
        if (result.isConfirmed) {
            localStorage.removeItem("transactions");
            this.transactions = [];
            Swal.fire('Dihapus!', 'Semua transaksi telah dihapus.', 'success');
        }
    });
},

loadTransactions() {
    this.transactions = JSON.parse(localStorage.getItem("transactions")) || [];
}
,
    // Laporan total pendapatan
    get totalRevenue() {
      return this.transactions.reduce((sum, trx) => {
        const total = Number(trx.totalPrice);
        return sum + (isNaN(total) ? 0 : total);
      }, 0);
    }



  }
}
